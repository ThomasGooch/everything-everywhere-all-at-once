# Jira Plugin Configuration
# =============================================================================

# Plugin Information
plugin:
  name: "jira"
  version: "1.0.0"
  description: "Atlassian Jira integration for task management"
  author: "AI Dev Orchestrator Team"

# Connection Settings
connection:
  # Jira instance URL (without trailing slash)
  url: "${JIRA_URL}"
  
  # Authentication (basic auth with API token recommended)
  email: "${JIRA_EMAIL}"
  api_token: "${JIRA_API_TOKEN}"
  
  # Alternative: OAuth 2.0 authentication
  # oauth:
  #   client_id: "${JIRA_OAUTH_CLIENT_ID}"
  #   client_secret: "${JIRA_OAUTH_CLIENT_SECRET}"
  #   redirect_uri: "${JIRA_OAUTH_REDIRECT_URI}"
  
  # Connection settings
  timeout: 30
  max_retries: 3
  retry_backoff: 2
  verify_ssl: true

# Default Project Settings
project:
  key: "${JIRA_PROJECT_KEY}"
  default_assignee: "${JIRA_EMAIL}"
  
  # Component mapping (optional)
  components:
    frontend: "Frontend"
    backend: "Backend"
    database: "Database"
    api: "API"
    ui: "User Interface"
    testing: "Testing"

# Issue Type Mappings
issue_types:
  # Map standard types to Jira issue types
  epic: "Epic"
  task: "Task"
  story: "Story"
  bug: "Bug"
  subtask: "Sub-task"
  
  # Default issue type for new tasks
  default: "Task"

# Status Mappings
status_mapping:
  # Map standard statuses to Jira workflow statuses
  todo: "To Do"
  in_progress: "In Progress"
  in_review: "In Review"
  done: "Done"
  
  # Reverse mapping for reading from Jira
  from_jira:
    "To Do": "todo"
    "Open": "todo"
    "Backlog": "todo"
    "In Progress": "in_progress"
    "In Development": "in_progress"
    "In Review": "in_review"
    "Code Review": "in_review"
    "Done": "done"
    "Closed": "done"
    "Resolved": "done"

# Priority Mappings
priority_mapping:
  # Map standard priorities to Jira priorities
  low: "Low"
  medium: "Medium"
  high: "High"
  critical: "Highest"
  
  # Reverse mapping
  from_jira:
    "Lowest": "low"
    "Low": "low"
    "Medium": "medium"
    "High": "high"
    "Highest": "critical"

# Custom Field Mappings
custom_fields:
  # Map standard fields to Jira custom fields
  repository_url: "customfield_10001"
  pr_url: "customfield_10002"
  branch_name: "customfield_10003"
  estimated_hours: "customfield_10004"
  tech_stack: "customfield_10005"
  ai_agent_id: "customfield_10006"
  
  # Story points (if using Scrum)
  story_points: "customfield_10020"
  
  # Epic link (for stories/tasks under epics)
  epic_link: "customfield_10014"
  
  # Sprint field (if using Scrum)
  sprint: "customfield_10021"

# Labels and Components
labels:
  # Default labels to add to AI-generated tasks
  default_labels:
    - "ai-generated"
    - "automation"
  
  # Technology stack labels
  tech_labels:
    python: "python"
    javascript: "javascript"
    react: "react"
    nodejs: "nodejs"
    fastapi: "fastapi"
    postgresql: "postgresql"
    redis: "redis"
    
  # Type labels
  type_labels:
    feature: "feature"
    bugfix: "bugfix"
    hotfix: "hotfix"
    refactor: "refactor"
    documentation: "docs"

# Workflow Automation
workflow:
  # Auto-transitions
  auto_transition:
    enabled: true
    
    # Automatically transition issues when certain events occur
    transitions:
      # When agent starts working on task
      on_agent_start: "In Progress"
      
      # When PR is created
      on_pr_created: "In Review"
      
      # When PR is merged (if auto-close enabled)
      on_pr_merged: "Done"
  
  # Auto-assignment
  auto_assign:
    enabled: false
    default_assignee: "${JIRA_EMAIL}"
    
    # Assignment based on task type
    by_task_type:
      frontend: "frontend-dev@company.com"
      backend: "backend-dev@company.com"
      database: "db-admin@company.com"

# Notification Settings
notifications:
  # Watchers to add to created issues
  default_watchers:
    - "${JIRA_EMAIL}"
    # - "project-manager@company.com"
    # - "tech-lead@company.com"
  
  # Notification preferences
  notify_on:
    issue_created: true
    status_changed: true
    assignee_changed: true
    comment_added: true
    pr_linked: true

# Comment Templates
comment_templates:
  # Template for when agent starts working
  agent_started: |
    ü§ñ **AI Agent Started**
    
    Agent ID: {agent_id}
    Started at: {timestamp}
    Estimated completion: {estimated_completion}
    
    The AI development agent has begun working on this task.
  
  # Template for when PR is created
  pr_created: |
    üîó **Pull Request Created**
    
    PR URL: {pr_url}
    Branch: {branch_name}
    Files changed: {files_count}
    
    Code implementation completed and ready for review!
  
  # Template for when agent fails
  agent_failed: |
    ‚ùå **Agent Execution Failed**
    
    Agent ID: {agent_id}
    Error: {error_message}
    Failed at: {timestamp}
    
    Please review the error and consider manual intervention.

# Integration Settings
integration:
  # GitHub/GitLab integration
  link_to_repository: true
  
  # Confluence integration
  create_documentation: false
  doc_space_key: "DEV"
  
  # Slack integration
  notify_slack: true
  slack_channel: "#development"

# Advanced Settings
advanced:
  # Bulk operations
  bulk_operations:
    enabled: true
    batch_size: 50
    delay_between_batches: 1  # seconds
  
  # Caching
  cache:
    enabled: true
    ttl: 300  # 5 minutes
    
  # Field validation
  validation:
    required_fields:
      - "summary"
      - "issuetype"
      - "project"
    
    # Custom validation rules
    rules:
      summary_min_length: 10
      summary_max_length: 255
      description_min_length: 20
  
  # Error handling
  error_handling:
    ignore_missing_fields: false
    retry_on_rate_limit: true
    max_description_length: 32767  # Jira text field limit
    
  # Performance
  performance:
    parallel_requests: 3
    request_timeout: 30
    connection_pool_size: 10

# Field Mappings for Different Operations
field_mappings:
  # Fields to include when creating issues
  create_issue:
    required:
      - "project.key"
      - "summary"
      - "issuetype.name"
    optional:
      - "description"
      - "assignee.emailAddress"
      - "priority.name"
      - "labels"
      - "components"
  
  # Fields to update when modifying issues
  update_issue:
    - "summary"
    - "description"
    - "assignee.emailAddress"
    - "priority.name"
    - "status"
    - "labels"
  
  # Fields to retrieve when fetching issues
  fetch_issue:
    - "key"
    - "summary"
    - "description"
    - "status"
    - "assignee"
    - "priority"
    - "labels"
    - "components"
    - "created"
    - "updated"
    - "customfield_*"  # All custom fields

# Query Settings
queries:
  # Default JQL for fetching project tasks
  project_tasks: "project = {project_key} AND status != Done ORDER BY created DESC"
  
  # Query for AI-generated tasks
  ai_tasks: "project = {project_key} AND labels = 'ai-generated' ORDER BY created DESC"
  
  # Query for tasks in progress
  active_tasks: "project = {project_key} AND status IN ('In Progress', 'In Review') ORDER BY updated DESC"
  
  # Query for overdue tasks
  overdue_tasks: "project = {project_key} AND duedate < now() AND status != Done ORDER BY duedate ASC"

# Testing and Development
development:
  # Mock mode for testing
  mock_mode: false
  
  # Test project settings
  test_project_key: "TEST"
  
  # Dry run mode (don't actually create issues)
  dry_run: false
  
  # Verbose logging
  verbose_logging: true
  
  # Debug API calls
  debug_api_calls: false

# Monitoring and Metrics
monitoring:
  # Enable metrics collection
  collect_metrics: true
  
  # Metrics to track
  metrics:
    - "issues_created"
    - "issues_updated"
    - "api_calls_made"
    - "api_errors"
    - "response_times"
  
  # Health check settings
  health_check:
    enabled: true
    endpoint: "/rest/api/3/myself"
    timeout: 10
    interval: 300  # 5 minutes